// *****************************************************************************
// SencoreVbNomadQamAuditor.java
// Copyright 2019 Sencore, Inc. All rights reserved.
// *****************************************************************************

package sencore.vb.nomad.qam.auditor.mini.project;

import java.awt.Color;
import java.awt.Desktop;
import java.awt.Toolkit;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.PrintWriter;
import java.net.URI;
import java.net.URL;
import java.nio.charset.Charset;
import java.nio.charset.StandardCharsets;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.nio.file.StandardOpenOption;
import java.util.Arrays;
import java.util.List;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.filechooser.FileSystemView;

public class SencoreVbNomadQamAuditor extends javax.swing.JFrame {

    // Creates new form SencoreVbNomadQamAuditor

    // Use to run tuning
    private Thread m_TuningThread;
    // Use to recognize valid ip
    private Pattern m_Pattern;
    // Match the m_Pattern of valid ip
    private Matcher m_Matcher;
    // 30 seconds SETTLE_DELAY to settle the data
    final private int SETTLE_DELAY = 30;
    // Disable clear button after starts a process
    private boolean m_FrequenciesClickToClearFlag = true;
    // Timer this will display the countdown timer
    private Countdown m_CountdownTimer = new Countdown();
    private String m_TuniningMessage = "";
    private final String m_XmlQuery = "C:\\Windows\\Temp\\Sencore_VB_NOMAD_QAM_Auditor_XML_QUERY.xml";//location where the xml query will create
    // Check the thread is interrupted or not. Use to clear GUI after cancel request to tunning thread.
    private boolean m_ThreadInterruptedFlag = false;

    // Default Constructor
    public SencoreVbNomadQamAuditor() {

        // This method is called from within the constructor to initialize the
        // form. WARNING: Do NOT modify this code. The content of this method is
        // always regenerated by the Form Editor.

        // This create the GUI. Must be call before everything.
        initComponents();
        // Create a xml query. Query must be separated from the curl command in order to run it on windows. inline queries will not run.
        CreateXml();
        // This function is for setting the values.
        TestInitializer();
        // Set Sencore logo
        SetSencoreLogo();
        CheckCurlVersion();
        BtnCancel.setEnabled(false);

    }// End of the constructor

//------------------------------------------Helper functions start here -----------------------------------------------------

//------------------------------------------TestInitializer function starts here -----------------------------------------------------
   // This is just to set default values. Mainly used for testing
   private void TestInitializer() {

        txtlable.setVisible(false);
        jLabel5.setVisible(false);
        txttime.setVisible(false);
        jCheckBox1.setSelected(true);

    }
    // End of the function TestInitializer

//------------------------------------------AfterTunning function starts here -----------------------------------------------------
   private void AfterTunning(final boolean INTERRUPT_FLAG){

       jLabel5.setText("Finished.......");
       txttime.setVisible(false);
       JOptionPane.showMessageDialog(null, "Done");
       m_FrequenciesClickToClearFlag = true;
       TxtFrequencies.setEditable(true);

       if(INTERRUPT_FLAG){
           TxtStatus.setText("");
           jLabel5.setText("Process cancelled");
           jLabel5.setVisible(true);
           txttime.setVisible(false);
       }

       if (jCheckBox1.isSelected()) {
           OpenLogFile(TxtLogFileLocation.getText());
       }
   }
   // End of the function AfterTunning

//------------------------------------------OpenLogFile function starts here -----------------------------------------------------
   // Open the log file after tuning
   private void OpenLogFile(final String path){

        // Reference to your file here
        File myCSVFile = new File(path);
        BtnStart.setEnabled(true);
        BtnCancel.setEnabled(false);
        try {
            // Open the file
            Desktop.getDesktop().open(myCSVFile);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }

    }
    // End of the OpenLogFile

 //------------------------------------------EditingXmlFile function starts here -----------------------------------------------------

   // Replace the Frequencies of the xml file.
   // Called from start button
   private void EditingXmlFile(final int lineNumber, final String FREQ){
     try {

         final String XML_LINE = "            <preset name=\""+FREQ+" MHz\" tuningId=\"1\" frequency=\""+FREQ+".000M\" chSpacing=\"8\" symbolRate=\"5.360537 M\" modulation=\"256\" annex=\"1\" etrThresholds=\"ATSC Default\" pidThresholds=\"Default\" serviceThresholds=\"Default\" qamThresholds=\"Default\" vbcThresholds=\"Default\" extractThumbs=\"true\" disable=\"false\" referenceThresholds=\"[None]\"></preset>";
         // Path from temp directory
         Path path = Paths.get(m_XmlQuery);

         // Line number 8 from the xml file will replaced by the XML_LINE each time this loop is called.
         List<String> lines = Files.readAllLines(path, StandardCharsets.UTF_8);
         lines.set(lineNumber - 1, XML_LINE);
         // Only line 8 will be written to file at each iteration of the loop
         Files.write(path, lines, StandardCharsets.UTF_8);

     } catch (Exception ex) {
         System.out.println("EditingXmlFile func: "+ ex);
     }
   }// Function EditingXmlFile ends here

 //------------------------------------------SetSencoreLogo function starts here -----------------------------------------------------
   // Set Sencore Logo
   private void SetSencoreLogo(){
        URL logo_png_Path = SencoreVbNomadQamAuditor.class.getResource("/logo/headerlogo.png");
        setIconImage(Toolkit.getDefaultToolkit().getImage(logo_png_Path));
    }
    // End of the SetSencoreLogo

 //------------------------------------------CheckCurlVersion function starts here -----------------------------------------------------
   private void CheckCurlVersion(){

       ProcessBuilder processBuilder = new ProcessBuilder();
       Process process;

       processBuilder.command("cmd.exe", "/c", "curl -V");
        try {
            process = processBuilder.start();
            BufferedReader buffReader = new BufferedReader(new InputStreamReader(process.getInputStream()));
            String line="";

            line = buffReader.readLine();

            jlblcurlVersion.setText("");
            line.trim();

              if( ! line.equals("")){
                    String [] split = line.split("\\(Windows\\)");
                    jlblcurlVersion.setText(split[0]);
              }

        } catch (Exception ex) {
              jlblcurlVersion.setText("Unable to recognize curl");
              JOptionPane.showMessageDialog(null, "cURL is not found in this machine. Please install cURL");
           try {
               java.awt.Desktop.getDesktop().browse(new URI("https://curl.haxx.se/windows/"));
           } catch (Exception ex1) {
               System.out.println("CheckCurlVersion func: " +ex1);
           }
              jlblcurlVersion.setText("curl is not installed");
        }

   }// End of CheckCurlVersion function

//------------------------------------------CreateXml function starts here -----------------------------------------------------
   // Create a seperate .xml file in windows/temp with xml query from curl command
   // Function will be called from the default constructor
   private void CreateXml() {

        // This list has all the xml queries
        final List<String> xml = Arrays.asList("<?xml version=\"1.0\" encoding= \"utf-8\"?>",
                "<ewe mask=\"0x100\" hw_type=\"4\" br=\"BT\" release=\"5.5.0-0\">",
                "  <probe>",
                "    <core>",
                "      <qam1>",
                "        <qam1Tunings>",
                "          <qamTuningList xmlChildren=\"list\" GreatestUsedTuningId=\"1\" QamTuningVer=\"Jan  1 00:40:26\">",
                "            <preset name=\"159 MHz\" tuningId=\"1\" frequency=\"159.000M\" chSpacing=\"8\" symbolRate=\"5.360537 M\" modulation=\"256\" annex=\"1\" etrThresholds=\"ATSC Default\" pidThresholds=\"Default\" serviceThresholds=\"Default\" qamThresholds=\"Default\" vbcThresholds=\"Default\" extractThumbs=\"true\" disable=\"false\" referenceThresholds=\"[None]\"></preset>",
                "          </qamTuningList>",
                "        </qam1Tunings>",
                "      </qam1>",
                "    </core>",
                "  </probe>",
                "</ewe>"
        );
        // List ends here

        final String PATH = "C:\\Windows\\Temp\\Sencore_VB_NOMAD_QAM_Auditor_XML_QUERY.xml";
        File newfile = new File(PATH);
        Charset utf8 = StandardCharsets.UTF_8;

        try {
            // If file doesn't exist create in new .xml file
            if (!newfile.isFile()) {
                newfile.createNewFile();
           }
           // If ends here

            // Clear the file
            PrintWriter pw = new PrintWriter(PATH);
            pw.close();

            // Write the xml query to the file
            Files.write(Paths.get(PATH), xml, utf8,
                    StandardOpenOption.CREATE, StandardOpenOption.APPEND);

        } catch (Exception ex) {
            System.out.println("CreateXml func: "+ex);
        }
    }
    // Create_xml function ends here

     // Suppress compile warnings about unchecked generic operations (not exceptions)
    //  Tell the compiler that what you're doing really will be legal at execution time.
    @SuppressWarnings("unchecked")
    // Code to generate GUI. Disregard unless you want to make changes to GUI.
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        TxtIpAddress = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        TxtLogFileLocation = new javax.swing.JTextField();
        BtnBrowse = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        BtnStart = new javax.swing.JButton();
        BtnCancel = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        TxtFrequencies = new javax.swing.JTextArea();
        jScrollPane1 = new javax.swing.JScrollPane();
        TxtStatus = new javax.swing.JTextArea();
        txtlable = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jCheckBox1 = new javax.swing.JCheckBox();
        BtnFrequencyFileBrowse = new javax.swing.JButton();
        txttime = new javax.swing.JLabel();
        BtnClear = new javax.swing.JButton();
        jlblcurlVersion = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Sencore VB-NOMAD QAM Auditor");
        setResizable(false);

        jLabel1.setText("VB-NOMAD IP Address:");

        TxtIpAddress.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TxtIpAddressMouseClicked(evt);
            }
        });
        TxtIpAddress.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                TxtIpAddressKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                TxtIpAddressKeyTyped(evt);
            }
        });

        jLabel2.setText("Log File Location:");

        TxtLogFileLocation.setEditable(false);

        BtnBrowse.setText("Browse");
        BtnBrowse.setToolTipText("Browse the location of the .csv file");
        BtnBrowse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnBrowseActionPerformed(evt);
            }
        });

        jLabel3.setText("Frequencies (Seperated by spaces):");

        BtnStart.setText("Start");
        BtnStart.setToolTipText("Start tuning process");
        BtnStart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnStartActionPerformed(evt);
            }
        });

        BtnCancel.setText("Cancel");
        BtnCancel.setToolTipText("Cancel tuning process");
        BtnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnCancelActionPerformed(evt);
            }
        });

        jLabel4.setText("Status:");

        TxtFrequencies.setColumns(20);
        TxtFrequencies.setRows(5);
        TxtFrequencies.setToolTipText("");
        jScrollPane3.setViewportView(TxtFrequencies);

        TxtStatus.setEditable(false);
        TxtStatus.setColumns(20);
        TxtStatus.setRows(5);
        jScrollPane1.setViewportView(TxtStatus);

        txtlable.setText("jLabel5");

        jLabel5.setText("jLabel5");

        jCheckBox1.setText("Open Log File After Completion");

        BtnFrequencyFileBrowse.setText("Browse");
        BtnFrequencyFileBrowse.setToolTipText("Browse or Create a new file");
        BtnFrequencyFileBrowse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnFrequencyFileBrowseActionPerformed(evt);
            }
        });

        txttime.setText("Time Remaining");

        BtnClear.setIcon(new javax.swing.ImageIcon(getClass().getResource("/logo/clear.png"))); // NOI18N
        BtnClear.setToolTipText("Click here to clear the frequencies");
        BtnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnClearActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(58, 58, 58)
                .addComponent(BtnStart, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(BtnCancel, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(133, 133, 133))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(TxtIpAddress, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(txtlable, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(TxtLogFileLocation, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(BtnFrequencyFileBrowse, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(BtnBrowse, javax.swing.GroupLayout.DEFAULT_SIZE, 78, Short.MAX_VALUE)))))
                            .addComponent(jLabel3)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jCheckBox1))
                            .addComponent(jScrollPane3)
                            .addComponent(jScrollPane1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(BtnClear, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(110, 110, 110)
                        .addComponent(txttime, javax.swing.GroupLayout.PREFERRED_SIZE, 233, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(28, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(TxtIpAddress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtlable))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(TxtLogFileLocation, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(BtnBrowse))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addComponent(jLabel3))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addComponent(BtnFrequencyFileBrowse, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(18, 18, Short.MAX_VALUE)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(22, 22, 22))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addComponent(BtnClear, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(BtnStart)
                    .addComponent(BtnCancel))
                .addGap(32, 32, 32)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5)
                    .addComponent(jCheckBox1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txttime)
                .addGap(19, 19, 19))
        );

        jlblcurlVersion.setText("jLabel6");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(38, 38, 38)
                        .addComponent(jlblcurlVersion)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(42, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(16, 16, 16)
                .addComponent(jlblcurlVersion)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents
    // GUI generation ends here. Disregard above codes unless you want to make changes to GUI.
    private void BtnStartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnStartActionPerformed
        TxtStatus.setText("");
        m_ThreadInterruptedFlag = false;
        final String IP_ADDRESS = TxtIpAddress.getText();
        final String FILE_LOCATION = TxtLogFileLocation.getText();
        final String FREQUENCIES_SEQUENCE = TxtFrequencies.getText();
        final String ADDR = IP_ADDRESS;

        // Highlite the current frequency
        HighliteFrequencies highliter = new HighliteFrequencies();
        TxtFrequencies.setEditable(false);
        // When running a process can't edit text fields
        m_FrequenciesClickToClearFlag = false;

        if (FILE_LOCATION.equals("")) {
            JOptionPane.showMessageDialog(null, "Please Select a .csv file");
            TxtLogFileLocation.setBackground(Color.red);
            return;
        }

        try {

            // Clear the .csv file
            PrintWriter pw = new PrintWriter(FILE_LOCATION);
            pw.close();

            // Trim to avoid leading white space and then slice numbers from the sequence using spaces as a delimiter
            String[] number_Array = FREQUENCIES_SEQUENCE.trim().split("\\s+");
            int length = number_Array.length;
            // Use to approximate time of completion
            int seconds = length * 30;


            m_TuningThread = new Thread() {

                public void run() {

                    ProcessBuilder processBuilder = new ProcessBuilder();
                    ProcessBuilder processBuilder1 = new ProcessBuilder();

                    Process process1;
                    Process process2;

                    for (String num : number_Array) {

                        try {
                            jLabel5.setText("Running.......");
                            BtnStart.setEnabled(false);
                            BtnCancel.setEnabled(true);
                            jLabel5.setVisible(true);
                            m_TuniningMessage = "Tuning into " + num + " MHz and measuring...\n";
                            TxtStatus.append(m_TuniningMessage);
                            // Auto scroll down
                            TxtStatus.setCaretPosition(TxtStatus.getDocument().getLength());
                            highliter.Highlight(TxtFrequencies, num);
                            highliter.Highlight(TxtStatus, num+" MHz");

                            // This function edit only line number 8 of the xml file with new frequency (String num)
                            EditingXmlFile(8, num);
                            String curl = "curl -i -X POST -H \"Content-Type: text/xml\" --data-binary @"+m_XmlQuery+" -o out.html \"http://" + IP_ADDRESS + "/probe/core/data.xml?\"";

                            // Use it when activating string command
                            processBuilder.command("cmd.exe", "/c", curl);

                            try {
                               // Open cmd and run the curl command.
                               process1 = processBuilder.start();
                            } catch (IOException ex) {
                                System.out.println("process1: "+ex);
                            }
                            // End of catch

                            Thread.sleep(SETTLE_DELAY * 1000);

                            processBuilder1.command("cmd.exe", "/c", "curl -s -o - \"http://" + ADDR + "/tmp/QAM.txt\" >> " + FILE_LOCATION);
                            try {
                                process2 = processBuilder1.start();
                            } catch (IOException ex) {
                                System.out.println("process2: "+ex);
                            }
                            //End of catch
                        } catch (InterruptedException ex) {
                            m_ThreadInterruptedFlag = true;
                            break;
                        }
                        //End of catch
                    }
                    //End of the for loop
                     AfterTunning(m_ThreadInterruptedFlag);
                }
                // End of the run method
            };
            // End of thread
            m_TuningThread.start();
            txttime.setVisible(true);
            m_CountdownTimer.CountdownTimer(seconds+"", txttime);

        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, ex);
        }
        // End of catch
    }//GEN-LAST:event_BtnStartActionPerformed

    private void BtnBrowseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnBrowseActionPerformed
        // Clear the file location
        TxtLogFileLocation.setText("");
        // Go to home directory. Usually windows desktop
        JFileChooser jfc = new JFileChooser(FileSystemView.getFileSystemView().getHomeDirectory());
        // Set the title of the pop up windows
        jfc.setDialogTitle("Select a .csv File");
        jfc.setAcceptAllFileFilterUsed(false);
        // Only show .csv files
        FileNameExtensionFilter filter = new FileNameExtensionFilter(".csv", "csv");
        // Activate the fileter
        jfc.addChoosableFileFilter(filter);

        int returnValue = jfc.showOpenDialog(null);
        if (returnValue == JFileChooser.APPROVE_OPTION) {

            final String path = jfc.getSelectedFile().getPath();//Assign the PATH

            if (path.endsWith(".csv")) {
                TxtLogFileLocation.setBackground(Color.green);
                TxtLogFileLocation.setForeground(Color.black);
                TxtLogFileLocation.setText(jfc.getSelectedFile().getPath());
            } else {
               TxtLogFileLocation.setBackground(Color.green);
               TxtLogFileLocation.setForeground(Color.black);
               TxtLogFileLocation.setText(jfc.getSelectedFile().getPath()+".csv");
            }
        }
    }//GEN-LAST:event_BtnBrowseActionPerformed

    private void BtnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnCancelActionPerformed
        int yes = JOptionPane.showConfirmDialog(null, "Do you want to cancel?", "Cancel", JOptionPane.YES_NO_OPTION);

        if(yes == JOptionPane.YES_OPTION){

            m_FrequenciesClickToClearFlag = true;
            BtnCancel.setEnabled(false);
            BtnStart.setEnabled(true);

            try{
                // Interrupt the thread
                m_TuningThread.interrupt();

                // Make a request a to stop timer
                m_CountdownTimer.CancelTimer();

            }catch(Exception ex){
                System.out.println("BtnCancle func: "+ex);
            }
            TxtStatus.setText("");
            jLabel5.setText("Process cancelled");
            jLabel5.setVisible(true);
            txttime.setVisible(false);
        }
    }//GEN-LAST:event_BtnCancelActionPerformed

    private void TxtIpAddressKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TxtIpAddressKeyTyped
        char enter = evt.getKeyChar();
        // Limit the ip field to only numbers and period
        if (!(Character.isDigit(enter)) && enter!='.') {
            evt.consume();
        }
    }//GEN-LAST:event_TxtIpAddressKeyTyped

    private void TxtIpAddressKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TxtIpAddressKeyReleased
        try {
            // Pattern of the ip
            final String regex
                    = "^([01]?\\d\\d?|2[0-4]\\d|25[0-5])\\."
                    + "([01]?\\d\\d?|2[0-4]\\d|25[0-5])\\."
                    + "([01]?\\d\\d?|2[0-4]\\d|25[0-5])\\."
                    + "([01]?\\d\\d?|2[0-4]\\d|25[0-5])$";

            String data = TxtIpAddress.getText();

            if (data.matches(regex)) {
                TxtIpAddress.setBackground(Color.green);
                TxtIpAddress.setForeground(Color.black);
                txtlable.setText("Valid IP");
                txtlable.setVisible(true);
            } else {
                TxtIpAddress.setBackground(Color.red);
                txtlable.setText("Invalid IP");
                txtlable.setVisible(true);
            }

        } catch (Exception ex) {
            System.out.println("TxtIp func: " +ex);
        }
    }//GEN-LAST:event_TxtIpAddressKeyReleased

    private void TxtIpAddressMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TxtIpAddressMouseClicked
       TxtIpAddress.setText("");
    }//GEN-LAST:event_TxtIpAddressMouseClicked

    private void BtnFrequencyFileBrowseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnFrequencyFileBrowseActionPerformed
        String path ="";
        // Go to home directory. Usually windows desktop
        JFileChooser jfc = new JFileChooser(FileSystemView.getFileSystemView().getHomeDirectory());
        // Set the title of the pop up windows
        jfc.setDialogTitle("Select a .txt File");
        jfc.setAcceptAllFileFilterUsed(false);
        // Only show .csv files
        FileNameExtensionFilter filter = new FileNameExtensionFilter(".txt", "txt");
        // Activate the fileter
        jfc.addChoosableFileFilter(filter);
        int returnValue = jfc.showOpenDialog(null);

        if (returnValue == JFileChooser.APPROVE_OPTION) {
            path = jfc.getSelectedFile().getPath();
        }
        // End of if
        try {

        // Get the PATH of the file
        File file = new File(path);
        // Used to read file
        BufferedReader br = new BufferedReader(new FileReader(file));

        String line;
        // Clear the text field before reading file content
        TxtFrequencies.setText("");
        // Track the new lines
        int i=0;

        // Read line by line
        while ((line = br.readLine()) != null) {

            // Remove any weird characters other than digits and spaces
            line = line.replaceAll("[^\\d ]", "");

            if(i>0){
               // After each line append \n
               TxtFrequencies.append(" \n");
            }
            TxtFrequencies.append(line);

            i++;
        }
        // End of the while loop
        br.close();

        } catch (Exception ex) {
            // Pop up any exception details
            JOptionPane.showMessageDialog(null, ex);
        }
    }//GEN-LAST:event_BtnFrequencyFileBrowseActionPerformed

    private void BtnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnClearActionPerformed
         if(m_FrequenciesClickToClearFlag){
             TxtFrequencies.setText("");
         }else{
             JOptionPane.showMessageDialog(null, "Can't do that in the middle of a process");
         }
    }//GEN-LAST:event_BtnClearActionPerformed


    // @param args the command line arguments

    //Jtattoo NoireLookAndFeel goes here [Black and Gold Theme]
    public static void main(String args[]) {
        // Set the Nimbus look and feel
        // <editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        // If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
        // For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
        //
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }

        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SencoreVbNomadQamAuditor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SencoreVbNomadQamAuditor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SencoreVbNomadQamAuditor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SencoreVbNomadQamAuditor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        // Create and display the form
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SencoreVbNomadQamAuditor().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BtnBrowse;
    private javax.swing.JButton BtnCancel;
    private javax.swing.JButton BtnClear;
    private javax.swing.JButton BtnFrequencyFileBrowse;
    private javax.swing.JButton BtnStart;
    private javax.swing.JTextArea TxtFrequencies;
    private javax.swing.JTextField TxtIpAddress;
    private javax.swing.JTextField TxtLogFileLocation;
    private javax.swing.JTextArea TxtStatus;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel jlblcurlVersion;
    private javax.swing.JLabel txtlable;
    private javax.swing.JLabel txttime;
    // End of variables declaration//GEN-END:variables

}
